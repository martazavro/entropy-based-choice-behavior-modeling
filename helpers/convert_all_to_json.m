inputFolder = 'test_mat';
outputFolder = 'test_json';

if ~exist(outputFolder, 'dir')
    mkdir(outputFolder);
end

matFiles = dir(fullfile(inputFolder, '*.mat'));

for i = 1:numel(matFiles)
    matFilePath = fullfile(inputFolder, matFiles(i).name);
    data = load(matFilePath);

    trialInBlock = num2cell(data.neuronData.signalValue.trialInBlock(:));
    choiceColor = num2cell(data.neuronData.signalValue.choiceColor(:));
    choiceLocation = num2cell(data.neuronData.signalValue.choiceLocation(:));
    choiceMotionDirection = num2cell(data.neuronData.signalValue.choiceMotionDirection(:));
    reward = num2cell(data.neuronData.signalValue.reward(:));
    learningStatus = num2cell(data.neuronData.signalValue.learningStatus(:));
    HDtrlnum = num2cell(data.neuronData.signalValue.HDtrlnum(:));
    probabilityRewardedChoice = num2cell(data.neuronData.signalValue.probabilityRewardedChoice(:));
    
    name = cellstr(data.neuronData.unitInfo.name);
    iso = cellstr(data.neuronData.unitInfo.iso);
    area = cellstr(data.neuronData.unitInfo.area);
    probabilityRewardedChoice_unitInfo = num2cell(data.neuronData.unitInfo.probabilityRewardedChoice(:));
    
    trialNum = num2cell(data.neuronData.trialNum(:));
    
    stimOn = num2cell(data.neuronData.signalTime.stimOn(:));
    colorOnset = num2cell(data.neuronData.signalTime.colorOnset(:));
    motionOnset = num2cell(data.neuronData.signalTime.motionOnset(:));
    choiceEvent = num2cell(data.neuronData.signalTime.choiceEvent(:));
    saccadeChoice = num2cell(data.neuronData.signalTime.saccadeChoice(:));
    reward_signalTime = num2cell(data.neuronData.signalTime.reward(:));
    f1On = num2cell(data.neuronData.signalTime.f1On(:));
    f2On = num2cell(data.neuronData.signalTime.f2On(:));
    stimOnTime = num2cell(data.neuronData.signalTime.stimOnTime(:));

    jsonData = struct(...
        'trialInBlock', trialInBlock, ...
        'choiceColor', choiceColor, ...
        'choiceLocation', choiceLocation, ...
        'choiceMotionDirection', choiceMotionDirection, ...
        'reward', reward, ...
        'learningStatus', learningStatus, ...
        'HDtrlnum', HDtrlnum, ...
        'probabilityRewardedChoice', probabilityRewardedChoice, ...
        'name', name, ...
        'iso', iso, ...
        'area', area, ...
        'probabilityRewardedChoice_unitInfo', probabilityRewardedChoice_unitInfo, ...
        'trialNum', trialNum, ...
        'stimOn', stimOn, ...
        'colorOnset', colorOnset, ...
        'motionOnset', motionOnset, ...
        'choiceEvent', choiceEvent, ...
        'saccadeChoice', saccadeChoice, ...
        'reward_signalTime', reward_signalTime, ...
        'f1On', f1On, ...
        'f2On', f2On, ...
        'stimOnTime', stimOnTime ...
    );

    outputFileName = [char(name{1}), '_output.json'];
    outputPath = fullfile(outputFolder, outputFileName);
    jsonStr = jsonencode(jsonData);
    fid = fopen(outputPath, 'w');
    fprintf(fid, '%s', jsonStr);
    fclose(fid);
end
